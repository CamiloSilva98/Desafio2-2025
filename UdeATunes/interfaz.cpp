#include "Interfaz.h"
#include "Medidor.h"
#include <iostream>
#include <limits>

using namespace std;

// Constructor
Interfaz::Interfaz() {
    plataforma = new Plataforma();
}

// Destructor
Interfaz::~Interfaz() {
    delete plataforma;
}

// Mostrar encabezado decorado
void Interfaz::mostrarEncabezado(const string& titulo) {
    cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë              " << titulo;

    // Rellenar espacios para centrar
    int espacios = 42 - titulo.length();
    for (int i = 0; i < espacios; i++) {
        cout << " ";
    }
    cout << "‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

// Mostrar separador
void Interfaz::mostrarSeparador() {
    cout << "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ" << endl;
}

// Limpiar pantalla (multiplataforma)
void Interfaz::limpiarPantalla() {
#ifdef _WIN32
    system("cls");
#else
    system("clear");
#endif
}

// Pausar ejecuci√≥n
void Interfaz::pausar() {
    cout << "\nPresiona ENTER para continuar...";
    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    cin.get();
}

// Leer opci√≥n num√©rica
int Interfaz::leerOpcion() {
    int opcion;
    cout << "\n> Ingresa tu opci√≥n: ";

    while (!(cin >> opcion)) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "[Error] Entrada inv√°lida. Intenta de nuevo: ";
    }

    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    return opcion;
}

// Leer texto
string Interfaz::leerTexto(const string& prompt) {
    string texto;
    cout << prompt;
    getline(cin, texto);
    return texto;
}

// Leer entero con validaci√≥n
int Interfaz::leerEntero(const string& prompt) {
    int numero;
    cout << prompt;

    while (!(cin >> numero)) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "[Error] Debes ingresar un n√∫mero. Intenta de nuevo: ";
    }

    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    return numero;
}

// Men√∫ principal
void Interfaz::menuPrincipal() {
    limpiarPantalla();
    mostrarEncabezado("UDEATUNES - STREAMING MUSICAL");

    cout << "\nüéµ Bienvenido a UdeATunes" << endl;
    cout << "   Tu plataforma de m√∫sica favorita\n" << endl;

    mostrarSeparador();
    cout << "1. Iniciar sesi√≥n" << endl;
    cout << "2. Acerca de" << endl;
    cout << "3. Salir" << endl;
    mostrarSeparador();
}

// Men√∫ de login
void Interfaz::menuLogin() {
    limpiarPantalla();
    mostrarEncabezado("INICIO DE SESI√ìN");
    cout << "\nIngresa tus credenciales para acceder a la plataforma.\n" << endl;
}

// M√©todo principal de ejecuci√≥n
void Interfaz::iniciar() {
    bool ejecutando = true;

    while (ejecutando) {
        menuPrincipal();
        int opcion = leerOpcion();

        switch (opcion) {
        case 1:
            // Login y ejecuci√≥n de la plataforma
            menuLogin();
            plataforma->ejecutar();
            break;

        case 2:
            limpiarPantalla();
            mostrarEncabezado("ACERCA DE UDEATUNES");
            cout << "\nüìå UdeATunes v1.0" << endl;
            cout << "   Sistema de gesti√≥n de streaming musical" << endl;
            cout << "\nüë®‚Äçüíª Desarrollado por:" << endl;
            cout << "   - Brayan Camilo Silva Porras" << endl;
            cout << "   - Hamilton Alexander Su√°rez P√©rez" << endl;
            cout << "\nüè´ Universidad de Antioquia" << endl;
            cout << "   Inform√°tica 2 - 2025-2" << endl;
            pausar();
            break;

        case 3:
            limpiarPantalla();
            mostrarEncabezado("¬°HASTA PRONTO!");
            cout << "\nüéµ Gracias por usar UdeATunes" << endl;
            cout << "   ¬°Vuelve pronto por m√°s m√∫sica!\n" << endl;
            ejecutando = false;
            break;

        default:
            cout << "\n[Error] Opci√≥n inv√°lida. Intenta de nuevo." << endl;
            pausar();
            break;
        }
    }
}
